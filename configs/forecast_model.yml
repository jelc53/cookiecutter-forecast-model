forecast_model:
  model_type: 'ml_model'  # {'ml_model', 'bayesian'}
  target: 'y_house_price_of_unit_area'

  features:
    numeric:
      - 'x2_house_age'
      - 'x3_distance_to_nearest_mrt_station'
      - 'x7_haversine_distance'
    categorical:
      - # TODO: not yet implemented ! 

  ml_model:
    model_name: "xgboost" # "random_forest" or "xgboost" 
    hyperparameters:
      scoring: "neg_mean_absolute_error" # can be "r2", "neg_mean_absolute_error"
      n_iter: 10 # default
      cv: 10
      random_state: 42
      search_space:
        random_forest:
          n_estimators: [10, 30, 50, 70, 100, 150]
          max_depth: [3, 4, 5, 6]
          max_samples: [0.5, 0.7, 0.9]
          min_samples_split: [2, 4, 6]
        xgboost:
          n_estimators: [10, 30, 50, 70, 100]
          max_depth: [3, 4, 5, 6]
          eta: [0.01, 0.05, 0.1, 0.2]
          subsample: [0.5, 0.6, 0.7, 0.8, 0.9]
          colsample_bytree: [0.5, 0.6, 0.7, 0.8, 0.9]

  bayesian:

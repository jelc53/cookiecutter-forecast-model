forecast_model:
  model_type: 'ml_model'  # {'ml_model', 'bayesian'}
  target: 'y_house_price_of_unit_area'

  features:
    numeric:
      - 'x2_house_age'
      - 'x3_distance_to_nearest_mrt_station'
      - 'x7_haversine_distance'
    categorical:
      - # TODO: not yet implemented ! 

  ml_model:
    model_name: 'lin_reg' # {"lin_reg", "random_forest", "xgboost"} 
    scoring: 'neg_mean_absolute_error' # can be "r2", "neg_mean_absolute_error"
    random_state: 42
    hyperparameters:
      cv_splits: 10  # default
      n_iter: 10  # default
      lin_reg:
        None
      random_forest:
        n_estimators: [10, 30, 50, 70, 100, 150]
        max_depth: [3, 4, 5, 6]
        max_samples: [0.5, 0.7, 0.9]
        min_samples_split: [2, 4, 6]
      xgboost:
        n_estimators: [10, 30, 50, 70, 100]
        max_depth: [3, 4, 5, 6]
        eta: [0.01, 0.05, 0.1, 0.2]
        subsample: [0.5, 0.6, 0.7, 0.8, 0.9]
        colsample_bytree: [0.5, 0.6, 0.7, 0.8, 0.9]

  bayesian:
    model_name: 'lin_reg'
    init_args:
      x2_house_age: 0.0
      x3_distance_to_nearest_mrt_station: 0.0
      x7_haversine_distance: 0.0
    fit_args:
      n_warmup: 500  # warmup sampling
      n_samples: 1000  # posterior sampling
      max_treedepth: 12
      adapt_delta: 0.9
      n_jobs: 1
      chains: 1
      refresh: 200
      seed: 3335
